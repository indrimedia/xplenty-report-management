<?php

namespace AppBundle\Repository\Reporting;

use AppBundle\Entity\Reporting\Campaign;

/**
 * CommissionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommissionRepository extends BaseRepository
{
    public $table = "xp_commissions";

    public $nameField = "indri_account_id";

    /**
     * Finds all commissions
     * @return mixed
     */
    public function findAllCommissions(){
        $commissions = $this->customQuery('select c.commission, c.publisher, c.indri_account_id, a.account_name from '
            . $this->table . ' c
left join xp_accounts a on a.indri_account_id = c.indri_account_id');
        return $commissions;
    }

    /**
     * Update a commission
     * @param $packageData
     */
    public function update($commission){
        $whereFields[] = 'indri_account_id';
        $whereFields[] = 'publisher';
        $whereValues[] = $commission['indri_account_id'];
        $whereValues[] = $commission['publisher'];
        $this->updateSQLByMultipleCriteria($this->table, $commission, $whereFields, $whereValues);
        return;
    }

    /**
     * Creates a commission
     * @param $package
     */
    public function create($commission){
        $fields = 'indri_account_id, publisher, commission';
        $values = "'" . $commission['indri_account_id'] . "','" . $commission['publisher'] . "','" .
            $commission['commission'] . "'";
        $this->insertSQL($this->table, $fields, $values);
        return;
    }

    /**
     * Find commissions by account
     * @param $accountID
     * @return array|bool
     */
    public function findByAccount($accountID){
        $commissions = $this->customQuery("select c.commission, c.publisher, c.indri_account_id, a.account_name from "
            . $this->table. " c
left join xp_accounts a on a.indri_account_id = c.indri_account_id WHERE c.indri_account_id='" . $accountID . "'");
        return $commissions;
    }

    /**
     * Find a commission for a specific account and publisher
     * @param $indriAccountID
     * @param $publisher
     * @return mixed
     */
    public function findCommissionByAccountAndPublisher($indriAccountID, $publisher){
        $properties = array(0 => 'publisher', 1 => 'indri_account_id');
        $values[0] = $publisher;
        $values[1] = $indriAccountID;
        $commissions = $this->findByMultipleProperties($this->table, '*', $properties, $values);
        return $commissions[0];
    }

}